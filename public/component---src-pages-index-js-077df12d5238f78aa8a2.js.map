{"version":3,"sources":["webpack:///./src/components/form.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["Form","react_default","a","createElement","name","method","data-netlify","data-netlify-honeypot","action","id","className","htmlFor","type","placeholder","IndexPage","layout","seo","title","keywords","form_Form","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","useStaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","useContext","context","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","gatsby_browser_entry","to","Footer","Layout","Fragment","components_header","components_footer","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-077df12d5238f78aa8a2.js","sourcesContent":["// import { Link } from \"gatsby\"\n// import PropTypes from \"prop-types\"\nimport React from \"react\";\n\nimport \"./Form.scss\";\n\nexport const Form = () => (\n  <form\n    name=\"partner-form\"\n    method=\"post\"\n    data-netlify=\"true\"\n    data-netlify-honeypot=\"bot-field\"\n    action=\"/page-2/\"\n    id=\"partnerForm\"\n  >\n    <div className=\"field\">\n      <label htmlFor=\"name\">Name</label>\n      <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"First Last\" />\n    </div>\n\n    <div className=\"field\">\n      <label htmlFor=\"email\">Email</label>\n      <input id=\"email\" type=\"email\" name=\"email\" />\n    </div>\n\n    <div className=\"field\">\n      <label htmlFor=\"phone\">Phone</label>\n      <input id=\"phone\" type=\"phone\" name=\"phone\" />\n    </div>\n\n    <div className=\"field\">\n      <label htmlFor=\"business\">Business Name</label>\n      <input id=\"business\" type=\"business\" name=\"business\" />\n    </div>\n\n    <div className=\"field\">\n      <label htmlFor=\"logo\">Company Logo</label>\n      <input id=\"logo\" type=\"file\" name=\"logo\" />\n    </div>\n\n    <button type=\"submit\">Send</button>\n  </form>\n);\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\n// import Image from \"../components/Image\";\nimport SEO from \"../components/seo\";\nimport { Form } from \"../components/form\";\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <h1>Hi people</h1>\n    <Form />\n    {/* <Image /> */}\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./header.scss\";\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header\">\n    <h1>\n      <Link to=\"/\">{siteTitle}</Link>\n    </h1>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport \"./footer.scss\";\n\nconst Footer = () => (\n  <footer>\n    <div>2019 Invention Convention</div>\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport \"./remedy.scss\";\n\nimport Header from \"./header\";\nimport Footer from \"./footer\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n\n        <main>{children}</main>\n\n        <Footer />\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}